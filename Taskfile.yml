version: '3'

env:
  OS:
    sh: uname | tr '[:upper:]' '[:lower:]'
  ARCH:
    sh: uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/'

tasks:
  install-common:
    cmds:
      - sudo apt-get install -y flatpak age colordiff htop postgresql-client-common python3-pip neovim

  setup-config:
    deps:
      - install-common
    cmds:
      - mkdir -p $HOME/.config/htop/ $HOME/.config/terminator $HOME/.ssh
      - cmd: ln -s $HOME/.dotfiles/curlrc $HOME/.curlrc
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/flake8rc $HOME/.config/flake8
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/gitconfig $HOME/.gitconfig
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/gitignore $HOME/.gitignore
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/htoprc $HOME/.config/htop/htoprc
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/nanorc $HOME/.nanorc
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/psqlrc $HOME/.psqlrc
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/terminator_config $HOME/.config/terminator/config
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/ssh_config $HOME/.ssh/config
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/wgetrc $HOME/.wgetrc
        ignore_error: true

  install-flatpaks:
    deps:
      - setup-config
    cmds:
      - flatpak -v remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
      - flatpak install -y flathub \
          ch.protonmail.protonmail-bridge \
          com.anydesk.Anydesk \
          com.discordapp.Discord \
          com.github.iwalton3.jellyfin-media-player \
          com.github.tchx84.Flatseal \
          com.rtosta.zapzap org.telegram.desktop \
          com.valvesoftware.Steam \
          com.visualstudio.code \
          com.vivaldi.Vivaldi \
          com.slack.Slack \
          org.ferdium.Ferdium \
          nz.mega.MEGAsync \
          org.clementine_player.Clementine \
          org.cryptomator.Cryptomator \
          org.darktable.Darktable \
          org.gimp.GIMP \
          org.gnome.meld \
          org.kde.kdenlive \
          org.libreoffice.LibreOffice \
          org.nomacs.ImageLounge \
          org.qbittorrent.qBittorrent \
          org.remmina.Remmina

  install-terraform:
    dir: /tmp
    deps:
      - install-flatpaks
    cmds:
      - set -e -o pipefail; curl -L https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
      - set -e -o pipefail; echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
      - sudo apt update
      - sudo apt install terraform
      - terraform version
    status:
      - test -f /usr/bin/terraform

  install-helm:
    dir: /tmp
    deps:
      - install-terraform
    cmds:
      - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
      - sudo apt-get install apt-transport-https --yes
      - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
      - sudo apt-get update
      - sudo apt-get install helm
      - helm version
    status:
      - test -f /usr/bin/helm

  install-gcloud:
    dir: /tmp
    deps:
      - install-helm
    cmds:
      - sudo apt-get update
      - sudo apt-get install apt-transport-https ca-certificates gnupg curl sudo
      - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
      - echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      - sudo apt-get update
      - sudo apt-get install google-cloud-cli
    status:
      - test -f /usr/bin/dockerd

  install-docker:
    dir: /tmp
    deps:
      - install-gcloud
    cmds:
      - sudo apt-get update
      - sudo apt-get -y install ca-certificates curl gnupg
      - sudo install -m 0755 -d /etc/apt/keyrings
      - curl -fsSL https://download.docker.com/linux/{{.DISTRO}}/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - sudo chmod a+r /etc/apt/keyrings/docker.gpg
      - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{.DISTRO}} {{.VERSION_CODENAME}} stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - sudo apt-get update
      - sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    vars:
      DISTRO:
        sh: . /etc/os-release && echo "$NAME" | tr '[:upper:]' '[:lower:]'
      VERSION_CODENAME:
        sh: . /etc/os-release && echo "$VERSION_CODENAME"
    status:
      - test -f /usr/bin/dockerd

  install-sway:
    deps:
      - install-docker
    cmds:
      - sudo apt install -y sway clipman grim slurp dunst gammastep waybar swayidle fonts-font-awesome blueman
      - mkdir -p ~/.config/sway ~/.config/waybar ~/.xkb/symbols ~/.config/dunst/
      - pip install khayyam
      - cmd: ln -s $HOME/.dotfiles/sway/config $HOME/.config/sway/config
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/waybar/config $HOME/.config/waybar/config
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/waybar/style.css $HOME/.config/waybar/style.css
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/xkb/custom $HOME/.xkb/symbols/custom
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/dunst/dunstrc $HOME/.config/dunst/dunstrc
        ignore_error: true
    status:
      - test -f /usr/bin/sway
      - test -f $HOME/.config/sway/config

  install-zsh:
    deps:
      - install-sway
    cmds:
      - sudo apt install zsh
      - sudo chsh -s /bin/zsh
      - sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      - rm $HOME/.zshrc
      - ln -s $HOME/.dotfiles/zshrc $HOME/.zshrc
      - git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k
      - git clone https://github.com/zsh-users/zsh-autosuggestions.git ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      - git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
      - git clone https://github.com/zsh-users/zsh-completions ~/.oh-my-zsh/custom/plugins/zsh-completions
      - git clone https://github.com/zsh-users/zaw.git ~/.oh-my-zsh/custom/plugins/zaw
      - git clone https://github.com/djui/alias-tips.git ~/.oh-my-zsh/custom/plugins/alias-tips
      - git clone https://github.com/marzocchi/zsh-notify ~/.oh-my-zsh/custom/plugins/zsh-notify
    vars:
      RUNZSH: false
    status:
      - test -f /bin/zsh
      - test -d ~/.oh-my-zsh/

  install-mpv:
    deps:
      - install-zsh
    cmds:
      - flatpak install -y flathub io.mpv.Mpv
      - mkdir -p $HOME/.var/app/io.mpv.Mpv/scripts
      - cmd: ln -s $HOME/.dotfiles/mpv/config $HOME/.var/app/io.mpv.Mpv/config
        ignore_error: true
      - cmd: ln -s $HOME/.dotfiles/mpv/input.conf $HOME/.var/app/io.mpv.Mpv/input.conf
        ignore_error: true
      - cmd: ln -s /usr/share/doc/mpv/tools/lua/autoload.lua $HOME/.var/app/io.mpv.Mpv/scripts/autoload.lua
        ignore_error: true

  install-tailscale:
    dir: /tmp
    deps:
      - install-mpv
    cmds:
      - curl -fsSL https://tailscale.com/install.sh | sh
      - tailscale version
    status:
      - test -f /usr/bin/tailscale

  install-once:
    deps:
      - install-tailscale

# --------------------------------------------- Install or update ----------------------------------------

  install-or-update-kubectl:
    dir: /tmp
    cmds:
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
      - echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
      - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - kubectl version --client

  install-or-update-helmfile:
    dir: /tmp
    deps:
      - install-or-update-kubectl
    cmds:
      - curl -fsSL -o helmfile.tar.gz "https://github.com/helmfile/helmfile/releases/download/{{.HELMFILE_VERSION}}/helmfile_$(echo -n {{.HELMFILE_VERSION}} | cut -c 2-)_{{.OS}}_{{.ARCH}}.tar.gz"
      - tar xzf helmfile.tar.gz
      - sudo install -o root -g root -m 0755 helmfile /usr/local/bin/helmfile
      - helmfile --version
    vars:
      HELMFILE_VERSION:
        sh: curl -Ls "https://github.com/helmfile/helmfile/releases" | \grep 'href="/helmfile/helmfile/releases/tag/v[0-9]*.[0-9]*.[0-9]*\"' | sed -E 's/.*\/helmfile\/helmfile\/releases\/tag\/(v[0-9\.]+)".*/\1/g' | head -1

  install-or-update-krew:
    dir: /tmp
    deps:
      - install-or-update-helmfile
    cmds:
      - curl -fsSL -o krew.tar.gz "https://github.com/kubernetes-sigs/krew/releases/latest/download/krew-{{.OS}}_{{.ARCH}}.tar.gz"
      - tar xzf krew.tar.gz
      - sudo install -o root -g root -m 0755 krew-{{.OS}}_{{.ARCH}} /usr/local/bin/krew
      - krew version
    vars:
      OS:
        sh: uname | tr '[:upper:]' '[:lower:]'
      ARCH:
        sh: uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/'

  install-or-update-kustomize:
    dir: /tmp
    deps:
      - install-or-update-krew
    cmds:
      - curl -fsSL -o kustomize.tar.gz "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F{{.KUSTOMIZE_VERSION}}/kustomize_$(echo -n {{.KUSTOMIZE_VERSION}})_{{.OS}}_{{.ARCH}}.tar.gz"
      - tar xzf kustomize.tar.gz
      - sudo install -o root -g root -m 0755 kustomize /usr/local/bin/kustomize
      - kustomize version
    vars:
      KUSTOMIZE_VERSION:
        sh: curl -Ls "https://github.com/kubernetes-sigs/kustomize/releases" | \grep 'href="/kubernetes-sigs/kustomize/releases/tag/kustomize%2Fv[0-9]*.[0-9]*.[0-9]*\"' | sed -E 's/.*\/kubernetes-sigs\/kustomize\/releases\/tag\/kustomize%2F(v[0-9\.]+)".*/\1/g' | head -1

  install-or-update-terraform-docs:
    dir: /tmp
    deps:
      - install-or-update-kustomize
    cmds:
      - curl -fsSL -o terraform-docs.tar.gz "https://github.com/terraform-docs/terraform-docs/releases/download/{{.VERSION}}/terraform-docs-$(echo -n {{.VERSION}})-{{.OS}}-{{.ARCH}}.tar.gz"
      - tar xzf terraform-docs.tar.gz
      - sudo install -o root -g root -m 0755 terraform-docs /usr/local/bin/terraform-docs
      - terraform-docs completion zsh | sudo tee /usr/local/share/zsh/site-functions/_terraform-docs > /dev/null
      - terraform-docs version
    vars:
      VERSION:
        sh: curl -Ls "https://github.com/terraform-docs/terraform-docs/releases" | \grep 'href="/terraform-docs/terraform-docs/releases/tag/v[0-9]*.[0-9]*.[0-9]*\"' | sed -E 's/.*\/terraform-docs\/terraform-docs\/releases\/tag\/(v[0-9\.]+)".*/\1/g' | head -1

  install-or-update-yt-dlp:
    dir: /tmp
    deps:
      - install-or-update-terraform-docs
    cmds:
      - sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp
      - sudo chmod a+rx /usr/local/bin/yt-dlp  # Make executable
      - yt-dlp --version

  install-or-update-kitty:
    deps:
      - install-or-update-yt-dlp
    cmds:
      - curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
      - mkdir -p $HOME/.config/kitty/
      - cmd: ln -s $HOME/.dotfiles/kitty/kitty.conf $HOME/.config/kitty/kitty.conf
        ignore_error: true
      - ~/.local/kitty.app/bin/kitty --version

  install-or-update-aws:
    dir: /tmp
    deps:
      - install-or-update-kitty
    cmds:
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip
      - sudo ./aws/install --update
      - aws --version

  install-or-update-mc:
    dir: /tmp
    deps:
      - install-or-update-aws
    cmds:
      - curl -LO https://dl.min.io/client/mc/release/linux-amd64/mc
      - sudo install -o root -g root -m 0755 mc /usr/local/bin/mc
      - mc --autocompletion
      - mc --version

  install-or-update-sops:
    dir: /tmp
    deps:
      - install-or-update-mc
    cmds:
      - curl -LO https://github.com/getsops/sops/releases/download/{{.SOPS_VERSION}}/sops-{{.SOPS_VERSION}}.linux.amd64
      - mv sops-{{.SOPS_VERSION}}.linux.amd64 sops
      - sudo install -o root -g root -m 0755 sops /usr/local/bin/sops
      - sops --version
    vars:
      SOPS_VERSION:
        sh: curl -Ls "https://github.com/getsops/sops/releases" | \grep 'href="/getsops/sops/releases/tag/v[0-9]*.[0-9]*.[0-9]*\"' | sed -E 's/.*\/getsops\/sops\/releases\/tag\/(v[0-9\.]+)".*/\1/g' | head -1

  install-or-update-yq:
    dir: /tmp
    deps:
      - install-or-update-sops
    cmds:
      - wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq
      - sudo install -o root -g root -m 0755 yq /usr/local/bin/yq
      - yq --version

  install-or-update-jq:
    dir: /tmp
    deps:
      - install-or-update-yq
    cmds:
      - wget https://github.com/jqlang/jq/releases/latest/download/jq-linux-amd64 -O jq
      - sudo install -o root -g root -m 0755 jq /usr/local/bin/jq
      - jq --version

  install-or-update-argocd:
    dir: /tmp
    deps:
      - install-or-update-jq
    cmds:
      - curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
      - sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
      - rm argocd-linux-amd64
      - argocd version --client

  install-or-update-mullvad:
    dir: /tmp
    deps:
      - install-or-update-argocd
    cmds:
      - curl -sSL -o mullvad.deb https://mullvad.net/en/download/app/deb/latest
      - sudo dpkg -i mullvad.deb
      - rm mullvad.deb
      - mullvad version

  install-or-update-ulauncher:
    dir: /tmp
    deps:
      - install-or-update-mullvad
    cmds:
      - curl -fsSL -o ulauncher.deb "https://github.com/Ulauncher/Ulauncher/releases/download/{{.ULAUNCHER_VERSION}}/ulauncher_$(echo -n {{.ULAUNCHER_VERSION}})_all.deb"
      - cmd: sudo dpkg -i ulauncher.deb
        ignore_error: true
      - sudo apt install -f
    vars:
      ULAUNCHER_VERSION:
        sh: curl -Ls "https://github.com/Ulauncher/Ulauncher/releases" | \grep 'href="/Ulauncher/Ulauncher/releases/tag/[0-9]*.[0-9]*.[0-9]*\"' | sed -E 's/.*\/Ulauncher\/Ulauncher\/releases\/tag\/([0-9\.]+)".*/\1/g' | head -1

  install-or-update:
    deps:
      - install-or-update-ulauncher

# ------------------------------------------------------------------------------------------------------

  install-all:
    deps:
      - install-once
      - install-or-update
